function setDbId_() {
  // Pega aquí la URL "compartir" de tu Spreadsheet (la que ves en el navegador)
  const url = 'https://docs.google.com/spreadsheets/d/XXXXXXXXXXXXXXX/edit#gid=0';
  const m = url.match(/spreadsheets\/d\/([a-zA-Z0-9-_]+)/);
  if (!m) throw new Error('URL de spreadsheet no válida');
  const id = m[1];
  PropertiesService.getScriptProperties().setProperty('DB_SHEET_ID', id);
  Logger.log('DB_SHEET_ID=' + id);
}

////

function diagSheets_() {
  const keys = [
    'PLANTAS','RECETAS','INGREDIENTES_RECETA',
    'PASOS_RECETA','INVENTARIO','LISTA_COMPRA',
    'TAREAS','DEFAULT_TIME'
  ];
  keys.forEach(k => {
    try {
      const v = Headers.verifyHeaders(k);
      Logger.log(k + ' → ok=' + v.ok + 
        ' | missing=[' + v.missing.join(', ') + ']' +
        ' | extra=[' + v.extra.join(', ') + ']' +
        ' | found=[' + v.found.join(' | ') + ']');
    } catch (e) {
      Logger.log(k + ' → ERROR: ' + e.message);
    }
  });
}


/////////////
function testSpreadsheetConnection_() {
  const id = PropertiesService.getScriptProperties().getProperty('DB_SHEET_ID');
  if (!id) {
    Logger.log('❌ No hay DB_SHEET_ID guardado.');
    return;
  }

  try {
    const ss = SpreadsheetApp.openById(id);
    Logger.log('✅ Conectado al Excel: ' + ss.getName());
    Logger.log('URL: ' + ss.getUrl());
  } catch (e) {
    Logger.log('❌ Error al conectar con el Excel: ' + e.message);
  }
}

////////////

function runTestSpreadsheetConnection() {
  testSpreadsheetConnection_(); // esta está en aux.gs
}

/////////////
/** Wrapper para poder ejecutar desde el editor y desde menús si quieres */
function printProps() {
  return printProps_();
}

//////////////////

function doGet(e) {
  // ?action=props → devuelve las props en texto plano
  if (e && e.parameter && e.parameter.action === 'props') {
    const txt = printProps_(); // ahora devuelve string (ver mejora abajo)
    return ContentService
      .createTextOutput(txt)
      .setMimeType(ContentService.MimeType.TEXT);
  }
  return ok_(); // tu 200 OK
}

////////////////

function printProps_() {
  const p = PropertiesService.getScriptProperties();
  const data = {
    has_TELEGRAM_TOKEN: !!p.getProperty('TELEGRAM_TOKEN'),
    ALLOWED_CHAT_ID   : p.getProperty('ALLOWED_CHAT_ID') || '(no set)',
    DB_SHEET_ID       : p.getProperty('DB_SHEET_ID')     || '(no set)',
    BOT_PAUSED        : p.getProperty('BOT_PAUSED')      || '(no)'
  };

  Logger.log(data);

  // formato texto para /props o ?action=props
  const lines = [
    `has_TELEGRAM_TOKEN: ${data.has_TELEGRAM_TOKEN}`,
    `ALLOWED_CHAT_ID   : ${data.ALLOWED_CHAT_ID}`,
    `DB_SHEET_ID       : ${data.DB_SHEET_ID}`,
    `BOT_PAUSED        : ${data.BOT_PAUSED}`
  ];
  return lines.join('\n');
}
